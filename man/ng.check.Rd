% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score.R
\name{ng.check}
\alias{ng.check}
\title{Diagnostic checks for the latent Gaussianity assumption in R-INLA}
\usage{
ng.check(
  fit,
  Dfunc = NULL,
  h = NULL,
  selection = NULL,
  compute.I0 = FALSE,
  compute.predictor = FALSE,
  compute.fixed = TRUE,
  compute.random = FALSE,
  plot = TRUE
)
}
\arguments{
\item{fit}{The inla object that fits the LGM.}

\item{Dfunc}{Function that receives as input the hyperparameter vector \eqn{\boldsymbol{\theta}}
in internal scale and the output is \eqn{\mathbf{D}(\boldsymbol{\theta})}, where \eqn{\mathbf{D}} is the dependency
matrix that specifies the non-Gaussian latent field. If there is more than one latent component
to be extended to non-Gaussianity, this should be a list of functions \eqn{\mathbf{D}_i(\boldsymbol{\theta})},
where \eqn{\mathbf{D}_i(\boldsymbol{\theta})} is the dependency matrix that specifies component i.}

\item{h}{Predefined constant \eqn{\mathbf{h}} vector that contains the distance between locations
or area of the basis functions. For models defined in discrete space this should be a
vector of ones. If there is more than one latent component to be extended to non-Gaussianity,
this should be a list of vectors \eqn{\mathbf{h_i}}
where \eqn{\mathbf{h_i}} is the predefined constant vector of component i.}

\item{selection}{List which specifies which model components of the LGM are to be extended
to non-Gaussianity. Same syntax as the argument \code{selection} of
the function \code{inla.posterior.sample}.}

\item{compute.I0}{Boolean. If \code{TRUE} compute \eqn{I_0(\mathbf{y}, \hat{\boldsymbol{\gamma}})} (asymptotic variance of the reference
distribution) and p-value.}

\item{compute.predictor}{Boolean. If \code{TRUE} computes the sensitivity measures for each predictor:
\eqn{\partial_\eta E[z_i|\mathbf{y},\eta]}, where \eqn{z_i} is the i\eqn{^th} element of the linear predictor}

\item{compute.fixed}{Boolean. If \code{TRUE} computes the sensitivity measures for each fixed effect.
\eqn{\partial_\eta E[z_i|\mathbf{y},\eta]}, where \eqn{z_i} is the i\eqn{^th} fixed effect}

\item{plot}{Boolean. Generate diagnostic plots.}
}
\value{
A list that for each model component in \code{selection} returns:
\itemize{
   \item \code{BF.check} The BF sensitivities \eqn{s_0(\mathbf{y})} and \eqn{s_0(\mathbf{y}, \hat{\boldsymbol{\gamma}})}, where
   \eqn{\hat{\boldsymbol{\gamma}}} is the posterior mode of the hyperparameters. The variance of the reference distribution
   for LGMS with Gaussian response is also shown.
   \item \code{BF.index} The contribution of each index to the overall BF sensitivity.
   \item \code{sens.fixed.matrix} Sensitivity matrix, containing \eqn{\partial_{\eta_i}E[z_j|\mathbf{y},\eta_i]},
   where \eqn{z_j} is the j\eqn{^th} fixed effect and \eqn{\eta_i} is the non-Gaussianity parameter of the i\eqn{^th}
   random effect
   \item \code{sens.fixed.matrix} Sensitivity matrix, containing \eqn{\partial_{\eta_i}E[z_j|\mathbf{y},\eta_i]},
   where \eqn{z_j} is the j\eqn{^th} index of the linear predictor and \eqn{\eta_i} is the non-Gaussianity
   parameter of the j\eqn{^th} random effect.
}

If \code{plot = TRUE}, the BF sensitivities \eqn{d_i(\mathbf{y})} for each index are shown, and also the BF sensitivity at the observed
data \eqn{s_0(\mathbf{y}, \hat{\boldsymbol{\gamma}})} is compared to \eqn{s_0(\mathbf{y}^\text{pred}, \hat{\boldsymbol{\gamma}}) \sim N(0,\eqn{I_0(\mathbf{y}), \hat{\boldsymbol{\gamma}}})}. For
}
\description{
Computes the BF sensitivity measures \eqn{s_0(\mathbf{y})} and  \eqn{I_0(\mathbf{y})} of the non-Gaussianity parameter at
the base Gaussian model:
\eqn{  \log \pi(\eta|\mathbf{y}) \propto (s_0(\mathbf{y}) - \theta_\eta)\eta  - \frac{I_0(\mathbf{y})}{2} \eta^2 + \mathcal{O}(\eta^2)}, where
\eqn{\theta_\eta} is the rate parameter of the exponential PC prior on \eqn{\eta}.
}
\examples{
\dontrun{
 #Here we fit an RW1 latent process to the jumpts time series
 plot(jumpts)

 #Fit LGM with INLA
 LGM     <- inla(y ~ -1 + f(x,  model = "rw1"),
                 data = jumpts,
                 control.compute = list(config = TRUE))

 #Fit LnGM with ngvb
 check.list <- ng.check(fit = LGM)
 }
}
